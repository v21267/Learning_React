{
  "_args": [
    [
      "react-router-redux@https://registry.npmjs.org/react-router-redux/-/react-router-redux-5.0.0-alpha.6.tgz",
      "c:\\work\\learning\\Venvito_React_2\\Venvito_React_2"
    ]
  ],
  "_from": "react-router-redux@5.0.0-alpha.6",
  "_id": "react-router-redux@5.0.0-alpha.6",
  "_inCache": true,
  "_location": "/react-router-redux",
  "_phantomChildren": {},
  "_requested": {
    "name": "react-router-redux",
    "raw": "react-router-redux@https://registry.npmjs.org/react-router-redux/-/react-router-redux-5.0.0-alpha.6.tgz",
    "rawSpec": "https://registry.npmjs.org/react-router-redux/-/react-router-redux-5.0.0-alpha.6.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/react-router-redux/-/react-router-redux-5.0.0-alpha.6.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/react-router-redux/-/react-router-redux-5.0.0-alpha.6.tgz",
  "_shasum": "7418663c2ecd3c51be856fcf28f3d1deecc1a576",
  "_shrinkwrap": null,
  "_spec": "react-router-redux@https://registry.npmjs.org/react-router-redux/-/react-router-redux-5.0.0-alpha.6.tgz",
  "_where": "c:\\work\\learning\\Venvito_React_2\\Venvito_React_2",
  "authors": [
    "Tim Dorr"
  ],
  "bugs": {
    "url": "https://github.com/reacttraining/react-router/issues"
  },
  "dependencies": {
    "history": "^4.5.1",
    "prop-types": "^15.5.4",
    "react-router": "^4.1.1"
  },
  "description": "Redux bindings for React Router",
  "devDependencies": {
    "babel-cli": "^6.14.0",
    "babel-core": "^6.14.0",
    "babel-eslint": "^7.1.1",
    "babel-jest": "^19.0.0",
    "babel-plugin-transform-react-remove-prop-types": "^0.3.2",
    "babel-preset-es2015": "^6.14.0",
    "babel-preset-react": "^6.5.0",
    "babel-preset-stage-1": "^6.5.0",
    "eslint": "^3.5.0",
    "eslint-plugin-import": "^2.2.0",
    "eslint-plugin-react": "^6.3.0",
    "gzip-size": "^3.0.0",
    "in-publish": "^2.0.0",
    "jest": "^19.0.2",
    "pretty-bytes": "^4.0.2",
    "react": "^15.4.2",
    "react-dom": "^15.4.2",
    "react-redux": "^5.0.3",
    "react-test-renderer": "^15.3.2",
    "redux": "^3.6.0",
    "rollup": "^0.41.4",
    "rollup-plugin-babel": "^2.7.1",
    "rollup-plugin-uglify": "^1.0.1"
  },
  "files": [
    "ConnectedRouter.js",
    "README.md",
    "actions.js",
    "es",
    "index.js",
    "middleware.js",
    "reducer.js",
    "umd"
  ],
  "homepage": "https://github.com/reacttraining/react-router#readme",
  "license": "MIT",
  "main": "index.js",
  "module": "es/index.js",
  "name": "react-router-redux",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^15"
  },
  "readme": "# react-router-redux\n\n[![npm version](https://img.shields.io/npm/v/react-router-redux.svg?style=flat-square)](https://www.npmjs.com/package/react-router-redux) [![npm downloads](https://img.shields.io/npm/dm/react-router-redux.svg?style=flat-square)](https://www.npmjs.com/package/react-router-redux) [![build status](https://img.shields.io/travis/reactjs/react-router-redux/master.svg?style=flat-square)](https://travis-ci.org/reactjs/react-router-redux)\n\n> **Keep your state in sync with your router** :sparkles:\n\nThis is beta software, it needs:\n\n1. A working example\n2. Some people to try it out and find bugs\n3. A strategy for working with the devtools\n   - (issue describing a different approach to what we've seen previously coming soon)\n\n## Installation\n\n```\nnpm install --save react-router-redux@next\n```\n\n## Usage\n\nHere's a basic idea of how it works:\n\n```js\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\n\nimport createHistory from 'history/createBrowserHistory'\nimport { Route } from 'react-router'\n\nimport { ConnectedRouter, routerReducer, routerMiddleware, push } from 'react-router-redux'\n\nimport reducers from './reducers' // Or wherever you keep your reducers\n\n// Create a history of your choosing (we're using a browser history in this case)\nconst history = createHistory()\n\n// Build the middleware for intercepting and dispatching navigation actions\nconst middleware = routerMiddleware(history)\n\n// Add the reducer to your store on the `router` key\n// Also apply our middleware for navigating\nconst store = createStore(\n  combineReducers({\n    ...reducers,\n    router: routerReducer\n  }),\n  applyMiddleware(middleware)\n)\n\n// Now you can dispatch navigation actions from anywhere!\n// store.dispatch(push('/foo'))\n\nReactDOM.render(\n  <Provider store={store}>\n    { /* ConnectedRouter will use the store from Provider automatically */ }\n    <ConnectedRouter history={history}>\n      <div>\n        <Route exact path=\"/\" component={Home}/>\n        <Route path=\"/about\" component={About}/>\n        <Route path=\"/topics\" component={Topics}/>\n      </div>\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root')\n)\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/reacttraining/react-router.git"
  },
  "scripts": {
    "build": "node ./tools/build.js",
    "clean": "git clean -fdX .",
    "lint": "eslint modules",
    "prepublish": "node ./tools/build.js",
    "test": "jest",
    "watch": "babel ./modules -d . --ignore __tests__ --watch"
  },
  "version": "5.0.0-alpha.6"
}
